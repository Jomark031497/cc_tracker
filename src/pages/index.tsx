import Head from 'next/head';
import { useModal } from '@/hooks/useModal';
import { Card, CreateCard, useCards } from '@/features/cards';
import { Menu } from '@headlessui/react';
import { IoMdAdd } from 'react-icons/io';
import { CreateTransaction, TransactionCard, useTransactions } from '@/features/transactions';
import { Button, DropdownMenu } from '@/components/Elements';
import { cx } from '@/utils/combineClassNames';
import { getSession } from 'next-auth/react';
import { GetServerSidePropsContext } from 'next';

export async function getServerSideProps(context: GetServerSidePropsContext) {
  const session = await getSession(context);

  if (!session) {
    return {
      redirect: {
        destination: '/login',
        permanent: false,
      },
    };
  }

  return {
    props: { user: session.user },
  };
}

export default function Home() {
  const { data: cards } = useCards();
  const { data: transactions } = useTransactions();

  const { close: closeCard, isOpen: isCardOpen, open: openCard } = useModal();
  const { close: closeTransaction, isOpen: isTransactionOpen, open: openTransaction } = useModal();

  return (
    <>
      <Head>
        <title>Dashboard | CC Tracker</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <>
        <section className="flex flex-col gap-4 mb-8">
          <div className="flex justify-between items-center">
            <p className="font-semibold text-gray-500">Accounts</p>
            <DropdownMenu label="Manage">
              <Menu.Item>
                {({ active }) => (
                  <button
                    onClick={() => openCard()}
                    className={cx(
                      'flex w-full items-center transition-all rounded-md px-2 py-2 text-sm',
                      active ? 'bg-primary-main text-white' : 'text-gray-500',
                    )}
                  >
                    <IoMdAdd className="text-lg mr-1" />
                    Add Card
                  </button>
                )}
              </Menu.Item>
            </DropdownMenu>
          </div>

          <div className="flex flex-col gap-2 bg-white py-4 px-2 shadow-xl rounded-xl">
            {!cards ? (
              <p>Loading cards...</p>
            ) : (
              cards.map((card) => <Card key={card.id} card={card} />)
            )}
          </div>
        </section>

        <section className="flex flex-col gap-4 mb-8">
          <div className="flex justify-between items-center">
            <p className="font-semibold text-gray-500">Recent Transactions</p>

            <Button variant="outlined" onClick={() => openTransaction()}>
              Add Transaction
            </Button>
          </div>

          <div className="flex flex-col gap-2 py-4 px-2">
            {!transactions ? (
              <p>Loading transactions...</p>
            ) : (
              transactions.map((transaction) => (
                <TransactionCard key={transaction.id} transaction={transaction} />
              ))
            )}
          </div>
        </section>

        <CreateCard isOpen={isCardOpen} close={closeCard} />
        <CreateTransaction isOpen={isTransactionOpen} close={closeTransaction} />
      </>
    </>
  );
}
